- name: "Ensure necessary directories exists"
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ dot_dir }}"
    - "{{ dot_d_dir }}"

- name: Install default rc files into '{{ dot_d_dir }}'
  template:
    src: "{{ item }}.j2"
    dest: "{{ dot_d_dir }}/{{ item }}"
  with_items:
    - 10-aliases
    - 10-paths

- name: Find additional files in {{ dot_d_source }}
  command: "ls {{ dot_d_source }}"
  register: dot_d_files

- name: Install additional files from {{ dot_d_source }} into '{{ dot_d_dir }}'
  template:
    src: "{{ dot_d_source }}/{{ item }}"
    dest: "{{ dot_d_dir }}/{{ item }}"
  with_items: "{{ dot_d_files.stdout_lines }}"

- name: Find additional files in {{ dot_d_local_source }}
  command: "ls {{ dot_d_local_source }}"
  register: dot_d_local_files

- name: Install additional files from {{ dot_d_local_source }} into '{{ dot_d_dir }}'
  template:
    src: "{{ dot_d_local_source }}/{{ item }}"
    dest: "{{ dot_d_dir }}/{{ item }}"
  with_items: "{{ dot_d_local_files.stdout_lines }}"

- name: Install main '{{ rc_script }}' script
  template:
    src: rc.sh.j2
    dest: "{{ rc_script }}"
    mode: 0755

- name: "Append {{ login_shell }} to the allowed shells"
  become: yes
  lineinfile:
    path: /etc/shells
    line: "{{ login_shell }}"

- name: Check current default shell
  command: echo $SHELL
  register: current_shell

- name: Set default shell
  command: "chsh -s {{ login_shell }} $USER"
  when: "current_shell.stdout != login_shell"

- name: Link {{ rc_script }} file to {{ shell_rc }}
  file:
    src: "{{ rc_script }}"
    dest: "{{ shell_rc }}"
    state: link
    mode: 0755
